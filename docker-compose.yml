version: '3.3'

services: 
    messaging:
        image: nats-streaming:0.22.0-alpine3.13
        restart: always
        ports:
            - 4222:4222
            - 8222:8222
    
    mongo:
        image: mongo:4-bionic
        restart: always
        ports: 
            - 27017:27017
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
        volumes: 
            - /home/luismiguel/Documents/docker-volumes/mongodb:/data/db

    mongo-express:
        image: mongo-express
        restart: always
        ports:
            - 8081:8081
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME}
            ME_CONFIG_MONGODB_ADMINPASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD}

    interactions-messaging:
        build: microservices/interactions-messaging/.
        image: microservice-messaging:v1
        restart: always
        depends_on: 
            - messaging
            - mongo
        environment: 
            - nats_URL=${nats_URL}
            - subject_id=${subject_id}
            - MONGO_URL=${MONGO_URL}
    
    interactions-core:
        build: microservices/interactions-core/.
        image: backend-microservice:v1
        restart: always
        depends_on: 
            - mongo
        environment: 
            - MONGO_URL=${MONGO_URL}
            - PORT=${PORT_APP}
            - ELASTIC_APM_SERVICE_NAME=${ELASTIC_APM_SERVICE_NAME}
            - ELASTIC_APM_SERVER_URL=${ELASTIC_APM_SERVER_URL}
        ports: 
            - 5000:5000

    apm-server:
        image: docker.elastic.co/apm/apm-server:7.11.1
        depends_on:
            - elasticsearch
            - kibana
        cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
        cap_drop: ["ALL"]
        ports:
            - 8200:8200

        command: >
            apm-server -e
            -E apm-server.rum.enabled=true
            -E setup.kibana.host=kibana:5601
            -E setup.template.settings.index.number_of_replicas=0
            -E apm-server.kibana.enabled=true
            -E apm-server.kibana.host=kibana:5601
            -E output.elasticsearch.hosts=["elasticsearch:9200"]
        healthcheck:
            interval: 10s
            retries: 12
            test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/
    
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.11.1
        environment:
            - bootstrap.memory_lock=true
            - cluster.name=docker-cluster
            - cluster.routing.allocation.disk.threshold_enabled=false
            - discovery.type=single-node
            - ES_JAVA_OPTS=-XX:UseAVX=2 -Xms1g -Xmx1g
        volumes:
            - esdata:/usr/share/elasticsearch/data
        ports:
            - 9200:9200

        healthcheck:
            interval: 20s
            retries: 10
            test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'
    
    kibana:
        image: docker.elastic.co/kibana/kibana:7.11.1
        depends_on:
            - elasticsearch
        environment:
            ELASTICSEARCH_URL: http://elasticsearch:9200
            ELASTICSEARCH_HOSTS: http://elasticsearch:9200
        ports:
            - 5601:5601

        healthcheck:
            interval: 10s
            retries: 20
            test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status

volumes:
    esdata:
        driver: local